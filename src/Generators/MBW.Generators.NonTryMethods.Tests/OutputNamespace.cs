using System.Collections.Generic;
using System.Threading.Tasks;
using MBW.Generators.NonTryMethods.Tests.Helpers;
using MBW.Generators.Tests.Common;
using Microsoft.CodeAnalysis;
using Xunit;

namespace MBW.Generators.NonTryMethods.Tests;

public class OutputNamespace
{
    [Fact]
    public async Task EmittedCode_HasNamespaceOfSource()
    {
        (string? output, IReadOnlyList<Diagnostic> diags) =
            await TestsHelper.RunHelperAsync("""
                                  namespace TestNamespace;

                                  [GenerateNonTryMethod]
                                  public partial class TestClass
                                  {
                                      public bool TryMethod(out int value)
                                      {
                                          value = 0;
                                          return true;
                                      }
                                  }
                                  """);
        Assert.Empty(diags);
        SyntaxHelper.Equal("""
                           // <auto-generated/>
                           #nullable enable
                           using System;

                           namespace TestNamespace;

                           partial class TestClass
                           {
                               public int Method()
                               {
                                   if (this.TryMethod(out var value))
                                       return value;

                                   throw new InvalidOperationException();
                               }
                           }
                           """, output);
    }
}