using System.Collections.Generic;
using System.Threading.Tasks;
using MBW.Generators.OverloadGenerator.Tests.Helpers;
using MBW.Generators.Tests.Common;
using Microsoft.CodeAnalysis;
using Xunit;

namespace MBW.Generators.OverloadGenerator.Tests;

public class AdvancedMethodShapesTests
{
    [Fact]
    public void ExtensionMethods_ThisModifierPreserved()
    {
        (string? output, IReadOnlyList<Diagnostic> diags) =
            TestsHelper.RunHelper("""
                                  using MBW.Generators.OverloadGenerator;
                                  using MBW.Generators.OverloadGenerator.Attributes;

                                  public enum K { A }

                                  public static partial class Ext
                                  {
                                      [TransformOverload("kind", typeof(K), "{value}.ToString()")]
                                      public static void Do(this string self, string kind, int x) { }
                                  }
                                  """);

        Assert.Empty(diags);
        SyntaxHelper.Equal("""
                     // <auto-generated/>

                     static partial class Ext
                     {
                         public static void Do(this string self, global::K kind, int x)
                             => Do(self, kind.ToString(), x);
                     }
                     """, output);
    }

    [Fact]
    public void UnsupportedMembers_AreIgnoredWithDiagnostic()
    {
        (string? output, _) =
            TestsHelper.RunHelper("""
                                  using MBW.Generators.OverloadGenerator;
                                  using MBW.Generators.OverloadGenerator.Attributes;

                                  public partial class O
                                  {
                                      [TransformOverload("x", typeof(int), "{value}")]
                                      public O(string x) { } // constructor should be ignored
                                  }
                                  """, ["CS0592"]);

        Assert.Null(output);
    }
}